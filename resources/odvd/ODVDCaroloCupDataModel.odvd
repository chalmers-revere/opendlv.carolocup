/*
 * Copyright (C) 2016 Chalmers
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

message chalmersrevere.carolocup.ExampleMessage [id = 901] {
    uint32 field1   [id = 1];
}

message gap.CommunicationLinkMSG [id = 555 ] {
    uint8 stateLaneFollower [id = 1];
    uint8 stateOvertaker [id = 2];
    uint8 stateParker [id = 3];
    map<uint32, double> sensors [id = 4];
    map<uint32, double> lidarDistances [id = 5];
    map<uint32, double> lidarStrength [id = 6];
    uint8 drivingLane [id = 7];
    uint16 distanceToRightLane [id = 8];
}

message gap.LaneFollowerMSG [id = 556 ] {
    uint8 stateStop [id = 1]; // 0 move or 1 stop
    uint8 stateLane [id = 2]; // 0 right lane or 1 left lane
    uint16 distanceToRightLane [id = 3];
}

message gap.OvertakerMSG [id = 557 ] {
    uint8 stateStop [id = 1]; // 0 move or 1 stop
    uint8 stateLane [id = 2]; // 0 right lane or 1 left lane
}

message gap.ParkerMSG [id = 558 ] {
    uint8 stateStop [id = 1]; // 0 move or 1 stop
}

message gap.SensorsMSG [id = 559 ] {
    map<uint32, double> sensors [id = 1];
}

message gap.LIDARMSG [id = 560 ] {
    map<uint32, double> lidarDistances [id = 1];
    map<uint32, double> lidarStrength [id = 2];
}

message gap.AutomotiveMSG [id = 561 ] {
    uint64 speed [id = 1];
    double steeringWheelAngle [id = 2];
    bool brakeLights [id = 3];
    bool IFLLights [id = 4]; //indicator front left
    bool IFRLights [id = 5]; //indicator front right
    bool IBLLights [id = 6]; //indicator back left
    bool IBRLights [id = 7]; //indicator back right
    bool headLights [id = 8];
}

message gap.UdpMSG [id = 562 ] {
    uint8 stateFunctionLane [id = 1];
    uint8 stateFunctionOvertaker [id = 2];
    uint8 stateFunctionParker [id = 3];
    uint8 stateStop [id = 4];
}