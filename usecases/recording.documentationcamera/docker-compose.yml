# docker-compose.yml - Micro-services to record one documentation camera.
# Copyright (C) 2016 Hang Yin, Christian Berger
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

version: '2'

services:
    # Micro-service for odsupercomponent.
     odsupercomponent:
        build: .
        network_mode: "host"
        ipc : host
        restart: on-failure
        privileged: true
        volumes:
            - ./config:/opt/configuration
        command: "/opt/od4/bin/odsupercomponent --cid=${CID} --verbose=1 --configuration=/opt/configuration/configuration --freq=20"

    # Micro-service for proxy-camera.
    proxy-camera:
        build: .
        group_add:
            - video
        depends_on:
            - odsupercomponent
        devices:
            - "/dev/video0:/dev/video0"
        user: odv
        network_mode: host
        ipc: host
        command: "/opt/opendlv.carolocup/bin/carolocup-control-proxy-cameraproxy --cid=${CID} --freq=20"


    # Micro-service for odrecorderh264.
    odrecorderh264:
        build: .
        depends_on:
            - odsupercomponent
            - proxy-camera
        volumes:
            - ../recordings:/opt/recordings
        user: odv
        network_mode: host
        ipc: host
        working_dir: "/opt/recordings"
        command: "/opt/od4/bin/odrecorderh264 --cid=${CID}"


    # carolocup-control-proxy-serialouthandler
    carolocup-control-proxy-serialouthandler:
        build: .
        network_mode: "host"
        ipc : host
        depends_on:
            - odsupercomponent
        devices:
            - "/dev/ttyUSB0:/dev/ttyUSB0"
        restart: on-failure
        privileged: true
        command: "/opt/opendlv.carolocup/bin/carolocup-control-proxy-serialhandler --cid=${CID} --freq=10 arduino=out"


        #Micro-service for lanefollower scenario.
    lanefollower:
        build: .
        network_mode: host
        ipc: host
        environment:
            - DISPLAY=$DISPLAY
        volumes:
            - ./config:/opt/configuration
        depends_on:
            - odsupercomponent
            #- carolocup-control-proxy-serialinhandler
            - communicationlink
        restart: on-failure
        privileged: true
        command: "/opt/opendlv.carolocup/bin/carolocup-control-lanefollower --verbose=1  --cid=${CID} --freq=20"

                 #Micro-service for communication link
    communicationlink:
        build: .
        network_mode: host
        ipc: host
        volumes:
           - ./config:/opt/configuration
        depends_on:
           - odsupercomponent
        restart: on-failure
        privileged: true
        command: "/opt/opendlv.carolocup/bin/carolocup-control-proxy-communicationlink --verbose=1  --cid=${CID} --freq=20"

